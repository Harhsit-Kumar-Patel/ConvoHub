name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'

jobs:
  # Backend Tests and Linting
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      
      - name: Install dependencies
        working-directory: ./server
        run: npm ci
      
      - name: Run linter
        working-directory: ./server
        run: npm run lint || echo "No lint script configured"
      
      - name: Run tests
        working-directory: ./server
        run: npm test || echo "No tests configured yet"
        env:
          MONGODB_URI: mongodb://localhost:27017/convohub-test
          JWT_SECRET: test-secret-key-for-ci
          NODE_ENV: test

  # Frontend Tests and Build
  frontend-test:
    name: Frontend Tests and Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
      
      - name: Install dependencies
        working-directory: ./client
        run: npm ci
      
      - name: Run linter
        working-directory: ./client
        run: npm run lint || echo "No lint script configured"
      
      - name: Run tests
        working-directory: ./client
        run: npm test || echo "No tests configured yet"
      
      - name: Build production bundle
        working-directory: ./client
        run: npm run build
        env:
          VITE_API_URL: https://api.example.com/api
          VITE_SOCKET_URL: https://api.example.com/chat
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: client/dist
          retention-days: 7

  # Docker Build Test
  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: false
          tags: convohub-server:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          file: ./client/Dockerfile
          push: false
          tags: convohub-client:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Security Audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Audit backend dependencies
        working-directory: ./server
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Audit frontend dependencies
        working-directory: ./client
        run: npm audit --audit-level=moderate
        continue-on-error: true
